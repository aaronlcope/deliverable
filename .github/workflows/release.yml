on:
  push:
    branches:
      - master
    tags:
    - '[0-9]+.[0-9]+.[0-9]+' # Matches all semantic versioning tags

name: release

jobs:
  build:
    name: Create release with assets
    runs-on: ubuntu-latest
    steps:
      - name: Download distributable (windows)
        - uses: actions/download-artifacts@master
          with: 
            name: windows-x64
            path: ./assets 
      - name: Download distributable (linux)
        - uses: actions/download-artifacts@master
          with: 
            name: linux-x64
            path: ./assets
      - name: Download distributable (osx)
        - uses: actions/download-artifacts@master
          with: 
            name: osx-x64
            path: ./assets 

      - name: Ensure distributables are there
        run: |
         cd assets
         pwd
         ls -al

      - name: Create release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body: cat < $(ls -v1 *\milestone_*.md | sort -nk1.11,1.99999 -r | head -n1)

      - name: Upload release asset (windows)
        id: upload-release-asset 
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./assets/
          asset_name: windows-x64.zip
          asset_content_type: application/zip

      - name: Upload release asset (linux)
        id: upload-release-asset 
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./assets/
          asset_name: linux-x64.zip
          asset_content_type: application/zip

      - name: Upload release asset (osx)
        id: upload-release-asset 
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./assets/
          asset_name: osx-x64.zip
          asset_content_type: application/zip